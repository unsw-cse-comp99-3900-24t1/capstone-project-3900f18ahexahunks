const { create } = require('xmlbuilder2');

/**
 * Convert JSON to UBL XML
 * @param {object} jsonData - The JSON data to be converted
 * @returns {string} - The UBL XML string
 */
function convertJsonToUbl(jsonData) {
    const doc = create({ version: '1.0', encoding: 'UTF-8' })
        .ele('Invoice', { xmlns: 'urn:oasis:names:specification:ubl:schema:xsd:Invoice-2', 'xmlns:cac': 'urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2', 'xmlns:cbc': 'urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2' })
            .ele('cbc:ID').txt(jsonData.invoiceNumber).up()
            .ele('cbc:IssueDate').txt(jsonData.issueDate).up()
            .ele('cbc:InvoiceTypeCode').txt('380').up()
            .ele('cbc:DocumentCurrencyCode').txt(jsonData.currencyCode).up()
            .ele('cac:AccountingSupplierParty')
                .ele('cac:Party')
                    .ele('cac:PartyName')
                        .ele('cbc:Name').txt(jsonData.supplier.name).up()
                    .up()
                    .ele('cac:PostalAddress')
                        .ele('cbc:StreetName').txt(jsonData.supplier.address.street).up()
                        .ele('cbc:CityName').txt(jsonData.supplier.address.city).up()
                        .ele('cbc:PostalZone').txt(jsonData.supplier.address.postalCode).up()
                        .ele('cac:Country')
                            .ele('cbc:IdentificationCode').txt(jsonData.supplier.address.country).up()
                        .up()
                    .up()
                    .ele('cac:PartyTaxScheme')
                        .ele('cbc:CompanyID').txt(jsonData.supplier.taxId).up()
                        .ele('cac:TaxScheme')
                            .ele('cbc:ID').txt('VAT').up()
                        .up()
                    .up()
                .up()
            .up()
            .ele('cac:AccountingCustomerParty')
                .ele('cac:Party')
                    .ele('cac:PartyName')
                        .ele('cbc:Name').txt(jsonData.customer.name).up()
                    .up()
                    .ele('cac:PostalAddress')
                        .ele('cbc:StreetName').txt(jsonData.customer.address.street).up()
                        .ele('cbc:CityName').txt(jsonData.customer.address.city).up()
                        .ele('cbc:PostalZone').txt(jsonData.customer.address.postalCode).up()
                        .ele('cac:Country')
                            .ele('cbc:IdentificationCode').txt(jsonData.customer.address.country).up()
                        .up()
                    .up()
                    .ele('cac:PartyTaxScheme')
                        .ele('cbc:CompanyID').txt(jsonData.customer.taxId).up()
                        .ele('cac:TaxScheme')
                            .ele('cbc:ID').txt('VAT').up()
                        .up()
                    .up()
                .up()
            .up()
            .ele('cac:TaxTotal')
                .ele('cbc:TaxAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.taxAmount).up()
            .up()
            .ele('cac:LegalMonetaryTotal')
                .ele('cbc:LineExtensionAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.totalAmount).up()
                .ele('cbc:TaxExclusiveAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.totalAmount).up()
                .ele('cbc:TaxInclusiveAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.payableAmount).up()
                .ele('cbc:PayableAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.payableAmount).up()
            .up()
            .ele('cac:InvoiceLine')
                .ele('cbc:ID').txt(jsonData.items[0].id).up()
                .ele('cbc:InvoicedQuantity', { unitCode: 'EA' }).txt(jsonData.items[0].quantity).up()
                .ele('cbc:LineExtensionAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.items[0].lineExtensionAmount).up()
                .ele('cac:Item')
                    .ele('cbc:Description').txt(jsonData.items[0].description).up()
                .up()
                .ele('cac:Price')
                    .ele('cbc:PriceAmount', { currencyID: jsonData.currencyCode }).txt(jsonData.items[0].price).up()
                .up()
            .up()
        .end({ prettyPrint: true });

    return doc;
}

module.exports = { convertJsonToUbl };
